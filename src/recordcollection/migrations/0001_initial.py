# Generated by Django 5.0.3 on 2024-03-22 03:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('musicbrainz_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('spotify_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('discogs_id', models.IntegerField(blank=True, default=None, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('year', models.SmallIntegerField(blank=True, default=None, null=True)),
                ('musicbrainz_group_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('is_compilation', models.BooleanField(default=False, verbose_name='V/A')),
                ('medium', models.CharField(blank=True, choices=[('CD', 'CD'), ('VIN', 'Vinyl'), ('FIL', 'File'), ('STR', 'Streaming')], default=None, max_length=3, null=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('musicbrainz_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('spotify_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('discogs_id', models.IntegerField(blank=True, default=None, null=True)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddConstraint(
            model_name='artist',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_artist_name'),
        ),
        migrations.CreateModel(
            name='AlbumArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(default=0)),
                ('join_phrase', models.CharField(blank=True, default='/', max_length=100)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_artists', to='recordcollection.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='recordcollection.artist')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='album',
            name='artists',
            field=models.ManyToManyField(related_name='albums', through='recordcollection.AlbumArtist', to='recordcollection.artist'),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('musicbrainz_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('spotify_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('discogs_id', models.IntegerField(blank=True, default=None, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('track_number', models.SmallIntegerField(blank=True, default=None, null=True, verbose_name='track #')),
                ('disc_number', models.SmallIntegerField(blank=True, default=None, null=True, verbose_name='disc #')),
                ('year', models.SmallIntegerField(blank=True, default=None, null=True)),
                ('duration', models.DurationField(blank=True, default=None, null=True)),
                ('file_path', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('file_hash', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('album', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='recordcollection.album')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='album',
            name='genres',
            field=models.ManyToManyField(blank=True, related_name='albums', to='recordcollection.genre'),
        ),
        migrations.AddField(
            model_name='track',
            name='genres',
            field=models.ManyToManyField(blank=True, related_name='tracks', to='recordcollection.genre'),
        ),
        migrations.CreateModel(
            name='TrackArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(default=0)),
                ('join_phrase', models.CharField(blank=True, default='/', max_length=100)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='recordcollection.artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_artists', to='recordcollection.track')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='track',
            name='artists',
            field=models.ManyToManyField(related_name='tracks', through='recordcollection.TrackArtist', to='recordcollection.artist'),
        ),
        migrations.AddConstraint(
            model_name='albumartist',
            constraint=models.UniqueConstraint(fields=('album', 'artist'), name='unique_album_artist'),
        ),
        migrations.AddConstraint(
            model_name='trackartist',
            constraint=models.UniqueConstraint(fields=('track', 'artist'), name='unique_track_artist'),
        ),
    ]
